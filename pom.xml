<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.example.springboot.camel</groupId>
	<artifactId>spring-boot-camel-docker-example</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<packaging>jar</packaging>

	<properties>
		<docker.maven.plugin.version>0.25.2</docker.maven.plugin.version>

		<spring-boot-version>1.5.12.RELEASE</spring-boot-version>
		<camel-version>2.21.1</camel-version>

		<log4j-version>1.2.17</log4j-version>
		<slf4j-version>1.7.21</slf4j-version>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
	</properties>


	<dependencyManagement>
		<dependencies>
			<!-- import Spring Boot before Camel -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring-boot-version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- import Camel -->
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-parent</artifactId>
				<version>${camel-version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>

		<!-- spring-boot -->

		<!-- notice we do not use the -web as we just run spring boot minimal without 
			a HTTP server -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>

		<!-- camel -->
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-spring-boot-starter</artifactId>
		</dependency>
		<!-- notice we use -starter components from Camel which are designed to 
			use with Spring Boot -->
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-http4-starter</artifactId>
		</dependency>
	</dependencies>


	<build>
		<plugins>
		<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.6.0</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>${spring-boot-version}</version>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- docker-maven-plugin which builds the docker image -->
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>${docker.maven.plugin.version}</version>
				<configuration>
					<images>
						<image>
							<name>camelinaction/spring-docker</name>
							<build>
								<from>openjdk:latest</from>
								<assembly>
									<descriptorRef>artifact</descriptorRef>
								</assembly>
								<cmd>java -jar maven/${project.artifactId}-${project.version}.jar</cmd>
							</build>
						</image>
					</images>
				</configuration>
			</plugin>
			<!-- <plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>fabric8-maven-plugin</artifactId>
				<version>3.5.40</version>
			</plugin> -->
			
			
			<!-- <plugin>
            <groupId>com.spotify</groupId>
            <artifactId>docker-maven-plugin</artifactId>
           <version>0.4.11</version>

            <configuration>
                <imageName>springio/${project.artifactId}</imageName>
                <dockerDirectory>src/main/docker</dockerDirectory>
                <resources>
                    <resource>
                        
                        <directory>${project.build.directory}</directory>
                        <include>${project.artifactId}-${project.version}.jar</include>
                    </resource>
                </resources>
            </configuration>
        </plugin> -->
        
        
        
		</plugins>
	</build>

</project>